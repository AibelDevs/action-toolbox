name: tool-generate-semantic-version
on:
  workflow_call:
    inputs:
      python_version:
        description: "Python version"
        type: string
        required: false
        default: "3.11"
      config_toml_file:
        description: "config file in repo for actions"
        type: string
        required: false
        default: "action_config_test.toml"
      python_semantic_release_pkg:
        description: "python-semantic-release pkg to use"
        type: string
        required: false
        default: "8.5.1"
      release_override:
        description: "if set this will override semantic release and labels used"
        type: string
        required: false
        default: ""
      branch:
        description: PR merge branch
        type: string
        required: false
    secrets:
      SOURCE_KEY:
        required: false

env:
  RELEASE_OVERRIDE: ${{ inputs.release_override }}

jobs:
  pr-version-calculate:
    uses: ./.github/workflows/tool-pr-version-calculate.yaml
    with:
      config_toml_file: ${{ inputs.config_toml_file }}
      branch: ${{ inputs.branch }}

  generateRelease:
    needs: pr-version-calculate
    if: ${{ needs.pr-version-calculate.outputs.is_release == 'true' || inputs.release_override != '' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout git
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.ref_name}}
          ssh-key: ${{ secrets.SOURCE_KEY }}

      - name: Check PR for any labels suggesting release_override
        if: ${{ inputs.release_override == '' }}
        shell: python
        run: |
          import os
          
          def set_env(name, value):
            with open(os.environ['GITHUB_ENV'], 'a') as fh:
                print(f'{name}={value}', file=fh)
          
          release_override_found = "${{ needs.pr-version-calculate.outputs.release_override_found }}"
          if release_override_found != '':
            set_env('RELEASE_OVERRIDE', release_override_found)  
          

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release=="${{ inputs.python_semantic_release_pkg }}"

      - name: Assign config toml file value
        id: toml_file
        run: |
          echo ${{ inputs.branch }}
          if ${{ inputs.branch == 'test' }}; then
            echo "inside test branch"
            echo "action_toml_file=action_config_test.toml" >> $GITHUB_OUTPUT
          elif ${{ inputs.branch == 'main' || inputs.branch == 'master' }}; then
            echo "inside main branch"
            echo "action_toml_file=action_config.toml" >> $GITHUB_OUTPUT
          fi

      - name: Run semantic release force ${{ env.RELEASE_OVERRIDE }}
        run: |
          semantic-release --config ${{ steps.toml_file.outputs.action_toml_file }} version --changelog ${{ env.RELEASE_OVERRIDE }} --vcs-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
