name: tool-review-gitops
on:
  workflow_call:
    inputs:
      python_version:
        description: "Python version"
        type: string
        required: false
        default: "3.11"
    outputs:
      gitops_review_str:
        description: "Body of the comment"
        value: ${{ jobs.review_gitops.outputs.gitops_review_str }}
      gitops_review_ok:
        description: "Is the GITOPS config ok"
        value: ${{ jobs.review_gitops.outputs.gitops_review_ok }}
    secrets:
      CONTAINER_REGISTRY_URL:
        required: false
      GITOPS_KEY:
        required: false
      SOURCE_KEY:
        required: false

jobs:
  load-config:
    uses: ./.github/workflows/tool-load-config.yaml

  test_gitops:
    uses: ./.github/workflows/tool-release-gitops-update.yaml
    needs: load-config
    with:
      push_commit: 'false'
      release_tag_override: "0.0.99"
      create_run_logs: 'true'
      docker_matrix: ${{ needs.load-config.outputs.docker_matrix }}
      gitops_matrix: ${{ needs.load-config.outputs.gitops_matrix }}
    secrets:
      CONTAINER_REGISTRY_URL: ${{ secrets.CONTAINER_REGISTRY_URL }}
      GITOPS_KEY: ${{ secrets.GITOPS_KEY }}

  review_gitops:
    runs-on: ubuntu-latest
    needs: [ test_gitops, load-config ]
    if: always()
    outputs:
      gitops_review_str: ${{ steps.comment_body.outputs.body }}
      gitops_review_ok: ${{ steps.comment_body.outputs.GITOPS_REVIEW_OK }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml=="0.10.2"
          pip install ruamel.yaml=="0.17.35"

      - name: Check for existence of required secrets
        id: secrets_check
        run: |
          if [ -z "${{ secrets.CONTAINER_REGISTRY_URL }}" ]; then
            echo "CONTAINER_REGISTRY_URL is not set as a secret"
            echo "has_container_registry_acr_url_secret=false" >> $GITHUB_OUTPUT
          else
            echo "has_container_registry_acr_url_secret=true" >> $GITHUB_OUTPUT
          fi
          
          if [ -z "${{ secrets.GITOPS_KEY }}" ]; then
            echo "GITOPS_KEY is not set as a secret"
            echo "has_gitops_key_secret=false" >> $GITHUB_OUTPUT
          else
            echo "has_gitops_key_secret=true" >> $GITHUB_OUTPUT
          fi

      - name: Review GITOPS config and create body for comment
        id: comment_body  # Set an ID for this step to reference its outputs
        shell: python
        run: |
          import os
          import base64

          def set_output(name, value, encode_it=False):
            if encode_it:
              value = base64.b64encode(value.encode('utf-8')).decode('utf-8')
            with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                print(f'{name}={value}', file=fh)
          
          def deserialize_str(s):
            return base64.b64decode(s).decode('utf-8')
          
          # GITOPS Review results
          body = "\n# Gitops Review:\n\n"
          
          # Check if gitops updates dry run was successful or not
          update_logs_ok = '${{ needs.test_gitops.outputs.update_logs_ok }}' == 'true' 
          update_logs_review_str = deserialize_str(b"${{ needs.test_gitops.outputs.update_logs_str }}")
          
          has_container_registry_acr_url_str = '${{ steps.secrets_check.outputs.has_container_registry_acr_url_secret }}'
          has_gitops_key_str = '${{ steps.secrets_check.outputs.has_gitops_key_secret }}'
          
          has_container_registry_acr_url = has_container_registry_acr_url_str.lower() != 'false'
          has_gitops_key = has_gitops_key_str.lower() != 'false'
          
          all_checks = [has_container_registry_acr_url, has_gitops_key, update_logs_ok]
          
          if all(all_checks):
            body += "I found no GitOps-related issues.\n"
            set_output('GITOPS_REVIEW_OK', 'true')
          else:
            body += "I found some GitOps-related issues:\n\n"
            set_output('GITOPS_REVIEW_OK', 'false')
                    
          if has_container_registry_acr_url is False:
            body += "\n * ❌ Please add the CONTAINER_REGISTRY_URL secret to the repo"
          else:
            body += "\n * ✅ I found the CONTAINER_REGISTRY_URL secret"
          
          if has_gitops_key is False:
            body += "\n * ❌ Please add the GITOPS_KEY secret to the repo"
          else:
            body += "\n * ✅ I found the GITOPS_KEY secret"
          
          body += update_logs_review_str
          
          # Set the output
          set_output('body', body, True)
          print(body)
