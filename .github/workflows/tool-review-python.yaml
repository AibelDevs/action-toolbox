name: Review Python

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version'
        type: string
        required: false
        default: '3.11'
      use_pylint:
        description: 'Use pylint'
        type: boolean
        required: false
        default: true
    outputs:
      python_review_str:
        description: 'Body of the comment'
        value: ${{ jobs.python-review-str.outputs.python_review_str }}
      python_review_ok:
        description: 'Is the PR ok'
        value: ${{ jobs.python-review-str.outputs.python_review_ok }}
    secrets:
      CONDA_API_TOKEN:
        required: false
      QUETZ_API_KEY:
        required: false
      QUETZ_URL:
        required: false
      PYPI_API_TOKEN:
        required: false
      CUSTOM_PYPI_USERNAME:
        required: false
      CUSTOM_PYPI_PASSWORD:
        required: false
      CUSTOM_PYPI_URL:
        required: false

jobs:
  load-config:
    uses: ./.github/workflows/tool-load-config.yaml

  py-linting-review:
    needs: load-config
    uses: ./.github/workflows/tool-review-python-lint.yaml
    with:
      python_version: ${{ inputs.python_version }}
      use_pylint: ${{ inputs.use_pylint }}

  py-packaging-review:
    needs: load-config
    uses: ./.github/workflows/tool-review-python-packaging.yaml
    with:
      python_version: ${{ inputs.python_version }}
    secrets:
      CONDA_API_TOKEN: ${{ secrets.CONDA_API_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      CUSTOM_PYPI_USERNAME: ${{ secrets.CUSTOM_PYPI_USERNAME }}
      CUSTOM_PYPI_PASSWORD: ${{ secrets.CUSTOM_PYPI_PASSWORD }}
      CUSTOM_PYPI_URL: ${{ secrets.CUSTOM_PYPI_URL }}
      QUETZ_API_KEY: ${{ secrets.QUETZ_API_KEY }}
      QUETZ_URL: ${{ secrets.QUETZ_URL }}

  conda-tests:
    needs: load-config
    if: ${{ needs.load-config.outputs.conda_enabled == 'true' }}
    uses: ./.github/workflows/tool-release-conda.yaml
    with:
      push_conda: 'false'
      config_toml_data: ${{ needs.load-config.outputs.config_toml_data }}

  python-review-str:
    name: Review Python Configuration
    needs: [ py-packaging-review, py-linting-review, conda-tests ]
    if: always()
    outputs:
      python_review_str: ${{ steps.python_review.outputs.body }}
      python_review_ok: ${{ steps.python_review.outputs.python_review_ok }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml==0.10.2

      - name: Review python config and create body for comment
        id: python_review  # Set an ID for this step to reference its outputs
        shell: python
        run: |
          import os
          import base64
          
          def set_output(name, value, encode_it=False):
            if encode_it:
              value = base64.b64encode(value.encode('utf-8')).decode('utf-8')
            with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                print(f'{name}={value}', file=fh)
          
          def deserialize_str(s):
            return base64.b64decode(s).decode('utf-8')
          
          all_checks = []
          review_str = ''
          
          # Python lint results
          review_str += deserialize_str('${{ needs.py-linting-review.outputs.pylint_review_str }}')
          all_checks.append('${{ needs.py-linting-review.outputs.pylint_review_ok }}' == 'true')
          
          # Python packaging results
          review_str += deserialize_str('${{ needs.py-packaging-review.outputs.python_packaging_review_str }}')
          all_checks.append('${{ needs.py-packaging-review.outputs.python_packaging_review_ok }}' == 'true')
          
          # Convert the string values to booleans
          
          header = "\n# Python Review:\n\n"
          
          if all(all_checks):
            header += "I found no python-related issues.\n"
            set_output('python_review_ok', 'true')
          else:
            header += "I found some python-related issues:\n\n"
            set_output('python_review_ok', 'false')
          
          # Combine the header and the review_str
          body = header + review_str

          # Set the output
          set_output('body', body, True)
          print(body)